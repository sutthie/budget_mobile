import 'dart:convert';

import 'package:bfriendapp/global/MySQLService.dart';
import 'package:bfriendapp/global/ResponseMessage.dart';
import 'package:bfriendapp/global/globalVar.dart';
import '../WelcomeScreen.dart';
import 'package:bfriendapp/styles/TextStyle.dart';
import 'package:flutter/material.dart';

import 'widget_share/SideMenuLeft.dart';

// void main() {
//   runApp(const MyApp());
// }

class LoginScreen extends StatelessWidget {
  const LoginScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final txtUser = TextEditingController();
    final txtPwd = TextEditingController();
    //final int i = 0;

    final FocusNode _focus = FocusNode();
    final FocusNode _nextFocus = FocusNode();
    final FocusNode _loginFocus = FocusNode();

    //======define widget=======
    final userField = TextField(
      style: styleSmalless,
      //autofocus: true,
      //focusNode: focusNode,
      focusNode: _focus,
      controller: txtUser,
      decoration: InputDecoration(
          contentPadding: const EdgeInsets.fromLTRB(5.0, 5.0, 5.0, 5.0),
          filled: true,
          fillColor: Colors.white,
          hintText: "UserName",
          border:
              OutlineInputBorder(borderRadius: BorderRadius.circular(10.0))),
      onSubmitted: (v) {
        _fieldFocusChange(context, _focus, _nextFocus);
      },
    );

    final passwordField = TextField(
      obscureText: true,
      controller: txtPwd,
      focusNode: _nextFocus,
      //enabled: false,
      style: styleSmalless,
      decoration: InputDecoration(
          contentPadding: const EdgeInsets.fromLTRB(5.0, 5.0, 5.0, 5.0),
          filled: true,
          fillColor: Colors.white,
          hintText: "Password",
          border:
              OutlineInputBorder(borderRadius: BorderRadius.circular(10.0))),
      onSubmitted: (v) {
        if (txtUser.text == '' || txtPwd.text == '') {
          showDialog(
            context: context,
            builder: (BuildContext context) => AlertDialog(
              title: const Text('ข้อมูลไม่ครบ'),
              content: const Text("กรุณากรอกข้อมูลให้ครบด้วย!!!"),
              actions: [
                TextButton(
                  onPressed: () {
                    Navigator.of(context).pop();
                    //Navigator.of(context).pushNamedAndRemoveUntil('/home', (Route<dynamic> route) => false);
                    //exit(0); End Program
                  },
                  child: const Text('OK'),
                ),
              ],
            ),
          );
        } else {
          //check Login;
          MySQLDB mysql = MySQLDB();

          mysql.chkLogin(txtUser.text, txtPwd.text).then((result) {
            //int chk = result;

            String msg;
            if (result == "") {
              msg = "Login False!!!";
              var msg1 = new ResponseMessage();
              msg1.Alert(context, "ผลคือ", "$msg");
            } else {
              msg = "Login Success!!!";

              print("Status Login : $msg");
              //print("Status Login : $msg and Data is : \n $result");

              if (result != "") {
                var dat = json.decode(result);
                print(dat[0]["userid"]);
                UserName = dat[0]["userid"];
                //print(dat.userid);

                Navigator.pop(context);
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => WelcomeScreen(),
                  ),
                  //Navigator.of(context).pushNamedAndRemoveUntil(
                  //                   '/login', (Route<dynamic> route) => false),
                );
              } else {
                //var msg = new ResponseMessage();
                //msg.Alert(context, "ผลคือ", "$msg");

              }
            }
          });

          //_fieldFocusChange(context, _nextFocus, _loginFocus);
          //=======================
        }
      },
/*      onChanged: (txt) {
         setState(() {
          log(txt);
        }); 
      },*/
    );
    //=========================================
    final loginButon = Material(
      elevation: 5.0,
      borderRadius: BorderRadius.circular(10.0),
      color: const Color(0xff01A0C7),
      child: MaterialButton(
        focusNode: _loginFocus,
        minWidth: MediaQuery.of(context).size.width / 5,
        padding: const EdgeInsets.fromLTRB(5.0, 5.0, 5.0, 5.0),
        onPressed: () {
          if (txtUser.text == '' || txtPwd.text == '') {
            showDialog(
              context: context,
              builder: (BuildContext context) => AlertDialog(
                title: const Text('ข้อมูลไม่ครบ'),
                content: const Text("กรุณากรอกข้อมูลให้ครบด้วย!!!"),
                actions: [
                  TextButton(
                    onPressed: () {
                      Navigator.of(context).pop();
                      //Navigator.of(context).pushNamedAndRemoveUntil('/home', (Route<dynamic> route) => false);
                      //exit(0);
                    },
                    child: const Text('OK'),
                  ),
                ],
              ),
            );
          } else {
            //check Login;
            MySQLDB mysql = MySQLDB();

            mysql.chkLogin(txtUser.text, txtPwd.text).then((result) {
              //int chk = result;

              String msg;
              if (result == "") {
                msg = "Login False!!!";
                var msg1 = new ResponseMessage();
                msg1.Alert(context, "ผลคือ", "$msg");
              } else {
                msg = "Login Success!!!";

                print("Status Login : $msg");
                //print("Status Login : $msg and Data is : \n $result");

                if (result != "") {
                  var dat = json.decode(result);
                  print(dat[0]["userid"]);
                  UserName = dat[0]["userid"];
                  //print(dat.userid);

                  Navigator.pop(context);
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => WelcomeScreen(),
                    ),
                  );
                } else {}
              }
            });

            //_fieldFocusChange(context, _nextFocus, _loginFocus);
            //=======================
          }
        },
        child: Text("Login",
            textAlign: TextAlign.center,
            style: styleSmall.copyWith(
                color: Colors.white, fontWeight: FontWeight.bold)),
      ),
    );
    //================================
    final resetButon = Material(
      elevation: 5.0,
      borderRadius: BorderRadius.circular(10.0),
      color: Colors.redAccent,
      child: MaterialButton(
        minWidth: MediaQuery.of(context).size.width / 5,
        padding: const EdgeInsets.fromLTRB(5.0, 5.0, 5.0, 5.0),
        highlightColor: Colors.amber, //on press button change color
        onPressed: () {
          txtUser.text = "";
          txtPwd.text = "";
        },
        child: Text("Reset",
            textAlign: TextAlign.center,
            style: styleSmall.copyWith(
                color: Colors.white, fontWeight: FontWeight.bold)),
      ),
    );

    return Scaffold(
      // edit overflow display #1
      //resizeToAvoidBottomInset: false,
      // cancel=>resizeToAvoidBottomPadding: false
      drawer: const SideMenu(),
      backgroundColor: Colors.cyan[200],
      appBar: PreferredSize(
        preferredSize: Size.fromHeight(35.0),
        child: AppBar(
          //title: Text(widget.title),
          title:
              //Text('BfriendAuto', style: styleHeadYellow2),
              Text('หน้าจอเข้าระบบ', style: styleHeadYellow2),
        ),
      ),
      body: SingleChildScrollView(
        // edit overflow #2
        child: Padding(
          padding: const EdgeInsets.all(3.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.start,
            children: [
              // Text(
              //   'กรุณาพิสูจน์สิทธิ์ ก่อนเข้าใช้ระบบ',
              //   style: styleHeadPurple2,
              // ),

              // FittedBox(
              //   fit: BoxFit.contain,
              //   alignment: Alignment.center,
              //   child:
              //   Image.network(
              //     "https://example.com/image.jpg",
              //     width: 300,
              //     height: 200,
              //   ),
              // ),
              Container(
                //width: MediaQuery.of(context).size.width,
                // constraints:
                //     BoxConstraints.expand(height: 150), // protect over width
                alignment: Alignment.center,
                child: Padding(
                  padding: const EdgeInsets.fromLTRB(2, 1, 2, 1),
                  child: Image.asset(
                    'assets/image/${img_bfriend}',
                    width: MediaQuery.of(context).size.width * 0.8,
                    //fit : BoxFit.fill,
                    //fit: BoxFit.cover,
                  ),
                ),
              ),

              // Container(
              //   //width: MediaQuery.of(context).size.width,
              //   // constraints:
              //   //     BoxConstraints.expand(height: 150), // protect over width
              //   color: Colors.lime.shade300,
              //   alignment: Alignment.bottomCenter,
              //   child: Padding(
              //     padding: const EdgeInsets.fromLTRB(2, 6, 2, 2),
              //     child: Row(
              //       mainAxisAlignment: MainAxisAlignment.center,
              //       crossAxisAlignment: CrossAxisAlignment.center,
              //       children: [
              //         SizedBox(
              //           width: 100,
              //           height: 5,
              //         )
              //       ],
              //     ),
              //   ),
              // ),

              Container(
                //width: MediaQuery.of(context).size.width,
                // constraints:
                //     BoxConstraints.expand(height: 150), // protect over width
                alignment: Alignment.center,
                color: Colors.lime.shade300,
                child: Padding(
                  padding: const EdgeInsets.fromLTRB(5, 10, 2, 2),
                  child: Image.asset(
                    'assets/image/${img_welcome}',
                    width: MediaQuery.of(context).size.width * 0.9,
                    //fit : BoxFit.fill,
                    //fit: BoxFit.cover,
                  ),
                ),
              ),

              // SizedBox(
              //   width: MediaQuery.of(context).size.width * 0.9,
              //   height: 10,
              // ),

              Container(
                width: MediaQuery.of(context).size.width,
                padding: const EdgeInsets.all(1.0),
                color: Colors.lime.shade300,
                child: Padding(
                  padding: const EdgeInsets.all(4.0),
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.start,
                    children: [
                      const SizedBox(height: 4.0),
                      Container(width: 110, height: 30, child: userField),
                      const SizedBox(height: 4.0),
                      Container(width: 110, height: 30, child: passwordField),
                      const SizedBox(height: 4.0),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Padding(
                            padding: const EdgeInsets.all(4.0),
                            child: SizedBox(
                                width: 60, height: 25, child: loginButon),
                          ),
                          SizedBox(width: 60, height: 25, child: resetButon),
                        ],
                      ),
                      Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            SizedBox(
                              width: 100,
                              height: 20,
                              child: OutlinedButton(
                                onPressed: () {},
                                child: Text(
                                  'สมัครใช้งาน',
                                  style: styleSmallest.copyWith(
                                      color: Colors.blue,
                                      fontWeight: FontWeight.bold),
                                ),
                              ),
                            ),
                            SizedBox(
                              width: 100,
                              height: 20,
                              child: OutlinedButton(
                                onPressed: () {},
                                child: Text(
                                  'ลืมรหัสผ่าน',
                                  style: styleSmallest.copyWith(
                                      color: Colors.red.shade900,
                                      fontWeight: FontWeight.bold),
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              Container(
                //width: MediaQuery.of(context).size.width,
                // constraints:
                //     BoxConstraints.expand(height: 150), // protect over width
                alignment: Alignment.center,
                child: Padding(
                  padding: const EdgeInsets.fromLTRB(2, 6, 2, 2),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Padding(
                        padding: const EdgeInsets.all(2.0),
                        child: Text(
                          'ติดต่อเรา',
                          style: styleNormal,
                        ),
                      ),
                      Padding(
                        padding: const EdgeInsets.all(2.0),
                        child: Image.asset(
                          'assets/image/BeeAuto-Logo-Footer.png',
                          width: MediaQuery.of(context).size.width * 0.5,
                          //height: 50,
                          //fit: BoxFit.fill,
                          //fit: BoxFit.cover,
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              Container(
                //width: MediaQuery.of(context).size.width,
                // constraints:
                //     BoxConstraints.expand(height: 150), // protect over width
                color: Colors.lime.shade300,
                alignment: Alignment.bottomCenter,
                child: Padding(
                  padding: const EdgeInsets.fromLTRB(2, 6, 2, 2),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      SizedBox(
                        width: 100,
                        height: 4,
                      )
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  _fieldFocusChange(
      BuildContext context, FocusNode currentFocus, FocusNode nextFocus) {
    currentFocus.unfocus();
    FocusScope.of(context).requestFocus(nextFocus);
  }
}
